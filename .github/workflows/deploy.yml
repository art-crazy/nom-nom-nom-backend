name: Build and Deploy Mentor Hub Backend

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install and Build
        run: |
          npm ci
          npm run build
          npm prune --production

      - name: Prepare deployment files
        run: |
          mkdir -p deployment
          cp -r dist package.json package-lock.json deployment/
          echo "### Deployment files ###"
          ls -la deployment/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-files
          path: deployment/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-files
          path: deployment/

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy files
        run: |
          # Transfer each file/folder separately
          scp -i ~/.ssh/id_rsa -r deployment/dist ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/var/www/mentor-hub-api/
          scp -i ~/.ssh/id_rsa deployment/package.json ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/var/www/mentor-hub-api/
          scp -i ~/.ssh/id_rsa deployment/package-lock.json ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/var/www/mentor-hub-api/

      - name: Install and start
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "
            set -ex  # Enable debug mode

            # Go to app directory
            cd /var/www/mentor-hub-api

            # Install dependencies (production only)
            npm ci --production

            # Restart application
            pm2 delete mentor-hub-api || true
            pm2 start dist/main.js --name \"mentor-hub-api\" --update-env
            pm2 save

            # Verify
            echo '### PM2 Status ###'
            pm2 list
            echo '### Running Processes ###'
            ps aux | grep node
            echo '### App Files ###'
            ls -la /var/www/mentor-hub-api/dist
          "
