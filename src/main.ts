// import * as dotenv from 'dotenv';
// dotenv.config();
//
// import { NestFactory } from '@nestjs/core';
// import { AppModule } from './app.module';
// import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
// import { NestExpressApplication } from '@nestjs/platform-express';
//
// async function bootstrap() {
//   const app = await NestFactory.create<NestExpressApplication>(AppModule);
//
//   // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å /api
//   app.setGlobalPrefix('api');
//
//   // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS (–º–æ–∂–Ω–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ origin –ø–æ–¥ —Å–µ–±—è)
//   app.enableCors({
//     origin: (origin, callback) => {
//       if (
//         !origin ||
//         ['https://chto-prigotovit.ru', 'https://www.chto-prigotovit.ru'].includes(origin) ||
//         /^http:\/\/localhost:\d+$/.test(origin)
//       ) {
//         callback(null, true);
//       } else {
//         callback(new Error('Not allowed by CORS'));
//       }
//     },
//     credentials: true,
//     methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
//     allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin'],
//     exposedHeaders: ['Content-Length', 'Content-Range'],
//   });
//
//   // Swagger –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
//   const config = new DocumentBuilder()
//     .setTitle('Nom Nom Nom API')
//     .setDescription('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–ª—è –±—ç–∫–µ–Ω–¥–∞ Nom Nom Nom')
//     .setVersion('1.0')
//     .addBearerAuth()
//     .build();
//
//   const document = SwaggerModule.createDocument(app, config);
//
//   SwaggerModule.setup('api/docs', app, document, {
//     customSiteTitle: 'Nom Nom Nom API - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
//     swaggerOptions: {
//       persistAuthorization: true,
//     },
//   });
//
//   const port = process.env.PORT ?? 3001;
//   await app.listen(port, '0.0.0.0');
//
//   console.log(`üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞: http://localhost:${port}`);
//   console.log(`üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${port}/api/docs`);
// }
//
// bootstrap();

// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫
import * as dotenv from 'dotenv';
dotenv.config();
import { NestFactory } from '@nestjs/core'; // –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è NestJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import { AppModule } from './app.module'; // –ö–æ—Ä–Ω–µ–≤–æ–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger'; // –ú–æ–¥—É–ª–∏ –¥–ª—è Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
import { NestExpressApplication } from '@nestjs/platform-express'; // –¢–∏–ø –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function bootstrap() {
  // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è NestJS —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Express –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º
  const app = await NestFactory.create<NestExpressApplication>(AppModule);

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –≤—Å–µ—Ö API –º–∞—Ä—à—Ä—É—Ç–æ–≤ (–≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –±—É–¥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å /api)
  app.setGlobalPrefix('api', {
    // exclude: ['docs', 'docs-json'], // —è–≤–Ω–æ –∏—Å–∫–ª—é—á–∞–µ–º swagger-—Ä–æ—É—Ç—ã
  });

  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º CORS (–º–µ—Ö–∞–Ω–∏–∑–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –±—Ä–∞—É–∑–µ—Ä–æ–≤)
  app.enableCors({
    origin: (origin, callback) => {
      if (!origin ||
        ['https://chto-prigotovit.ru', 'https://www.chto-prigotovit.ru'].includes(origin) ||
        /^http:\/\/localhost:\d+$/.test(origin)) {
        callback(null, true);
      } else {
        callback(new Error('Not allowed by CORS'));
      }
    },
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
    allowedHeaders: [
      'Content-Type',
      'Authorization',
      'X-Requested-With',
      'Accept',
      'Origin',
    ],
    exposedHeaders: ['Content-Length', 'Content-Range'],
  });

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  const config = new DocumentBuilder()
    .setTitle('Nom Nom Nom API') // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    .setDescription('API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è Nom Nom Nom') // –û–ø–∏—Å–∞–Ω–∏–µ
    .setVersion('1.0') // –í–µ—Ä—Å–∏—è API
    .addBearerAuth() // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Bearer –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    .build(); // –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é

  // –°–æ–∑–¥–∞–µ–º Swagger –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const document = SwaggerModule.createDocument(app, config);

  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Swagger UI (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
  SwaggerModule.setup('api/docs', app, document, {
    customSiteTitle: 'API Documentation',
    swaggerOptions: {
      // url: '/api/docs-json',
      persistAuthorization: true,
    },
    // üëá –í–ê–ñ–ù–û: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ Swagger UI –∞—Å—Å–µ—Ç–∞–º
    // customCssUrl: '/api/docs/swagger-ui.css',
    // customJs: [
    //   '/api/docs/swagger-ui-bundle.js',
    //   '/api/docs/swagger-ui-standalone-preset.js',
    // ],
  });



  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç–µ (–∏–ª–∏ 3000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  await app.listen(process.env.PORT || 3001);
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é bootstrap –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bootstrap();
